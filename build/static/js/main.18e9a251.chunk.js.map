{"version":3,"sources":["components/Person.js","components/FilterField.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Person","_ref","person","handleClick","react_default","a","createElement","name","number","onClick","FilterField","handleChange","onChange","PersonForm","handleNameChange","handleNumberChange","Fragment","type","Persons","persons","Notification","message","statusColor","notificationStyle","margin","backgroundColor","concat","borderRadius","padding","color","fontSize","style","baseUrl","services_persons","axios","get","then","response","data","newObject","post","id","delete","put","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","filter","setFilter","_useState9","_useState10","setMessage","_useState11","_useState12","setStatusColor","useEffect","personService","personsToShow","toUpperCase","includes","clearNotification","setTimeout","components_Notification","onSubmit","event","preventDefault","newPerson","map","window","confirm","find","p","updatedPerson","catch","error","returnedPerson","console","log","components_FilterField","target","value","components_PersonForm","components_Persons","components_Person","key","updatedArray","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.18e9a251.chunk.js","sourcesContent":["import React from '../../node_modules/react'\n\nconst Person = ({ person, handleClick }) =>\n    <p>\n        {person.name} {person.number}\n        <button onClick={handleClick}>poista</button>\n    </p>\n\nexport default Person","import React from '../../node_modules/react'\n\nconst FilterField = ({ handleChange }) =>\n    <div>\n        rajaa näytettäviä: <input onChange={handleChange} />\n    </div>\n\nexport default FilterField","import React from '../../node_modules/react'\n\nconst PersonForm = ({ handleNameChange, handleNumberChange }) => (\n    <>\n        <div>\n            nimi: <input onChange={handleNameChange} /> <br />\n            numero: <input onChange={handleNumberChange} />\n        </div>\n        <div>\n            <button type=\"submit\">lisää</button>\n        </div>\n    </>\n)\n\nexport default PersonForm","const Persons = ({ persons }) => persons\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({ message, statusColor }) => {\n    \n    const notificationStyle = {\n        margin: \"10px 0\",\n        backgroundColor: `${statusColor}`,\n        borderRadius: \"10px\",\n        padding: \"10px\",\n        color: \"white\",\n        fontSize: \"18px\"\n    }\n\n    return (\n        <div>\n            <p style={notificationStyle}>{message}</p>\n        </div>\n    )\n}\n\nexport default Notification","import axios from '../../node_modules/axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n    axios.delete(`${baseUrl}/${id}`)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, update}","import React, { useState, useEffect } from '../node_modules/react'\nimport \"./app.css\"\nimport Person from \"./components/Person\"\nimport FilterField from \"./components/FilterField\"\nimport PersonForm from \"./components/PersonForm\"\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [message, setMessage] = useState('')\n  const [statusColor, setStatusColor] = useState(\"white\")\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(persons => setPersons(persons))\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (persons.map(person => person.name).includes(newName)) {\n      const result = window.confirm(`${newName} on jo luettelossa, korvataanko vanhan numero uudella?`)\n\n      if (result) {\n        personService.update(persons.find(p => p.name === newName).id, newPerson)\n          .then(updatedPerson => {\n            setPersons(persons.map(person =>\n              person.name !== newName\n                ? person\n                : updatedPerson\n            ))\n\n            setMessage(`Henkilön ${newName} puhelinnumero vaihdettu: ${updatedPerson.number}`)\n            setStatusColor('lightGreen')\n            clearNotification()\n          }).catch(error => {\n            setMessage(`Henkilö ${newName} oli jo poistettu`)\n            setStatusColor('red')\n            setPersons(persons.filter(p => p.name !== newName))\n            clearNotification()\n          })\n      }\n    } else {\n      personService.create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n\n          setMessage(`Henkilö ${newName} lisättiin`)\n          setStatusColor('lightGreen')\n          clearNotification()\n        })\n        .catch(error => {\n          console.log(error.response.data)\n          setMessage(`${error.response.data.error}`)\n          setStatusColor('red')\n          clearNotification()\n        })\n    }\n\n  }\n\n  const removePerson = (id) => () => {\n    const name = persons.find(p => p.id === id).name\n\n    const result = window.confirm(`Poistetaanko ${name}`)\n\n    if (result) {\n      personService.remove(id)\n\n      const updatedArray = persons.filter(person => person.id !== id)\n      setPersons(updatedArray)\n\n\n      setMessage(`${name} poistettiin`)\n      setStatusColor('lightGreen')\n      clearNotification()\n    }\n  }\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleFilterChange = (event) => setFilter(event.target.value)\n\n  const personsToShow = persons.filter(person =>\n    person.name.toUpperCase().includes(filter.toUpperCase()))\n\n  const showPersons = () => personsToShow.map(person =>\n    <Person\n      key={person.id}\n      person={person}\n      handleClick={removePerson(person.id)}\n    />)\n\n  const clearNotification = () =>\n    setTimeout(() => {\n      setMessage(null)\n      setStatusColor('white')\n    }, 5000)\n\n  return (\n    <>\n      <h2>Puhelinluettelo</h2>\n      <Notification\n        message={message}\n        statusColor={statusColor} />\n      <form onSubmit={addPerson}>\n        <FilterField handleChange={handleFilterChange} />\n        <h3>Lisää uusi</h3>\n        <PersonForm\n          handleNameChange={handleNameChange}\n          handleNumberChange={handleNumberChange}\n        />\n      </form>\n      <h3>Numerot</h3>\n      <Persons persons={showPersons()} />\n    </>\n  )\n\n}\n\nexport default App","import React from '../node_modules/react';\nimport ReactDOM from '../node_modules/react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}